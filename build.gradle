plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.3.2"
    id "jacoco"
    id "org.sonarqube" version "3.3"
}

version = "1.0.0"
group = "org.observertc.observer"

repositories {
    mavenCentral()
    maven {
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3-http-client")
    implementation("io.micronaut.security:micronaut-security")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut.kubernetes:micronaut-kubernetes-client:3.4.0")

    // ------------- Websocket -----------
    implementation 'jakarta.websocket:jakarta.websocket-api:2.0.0'

    // ------------- Hazelcast -----------
//    implementation group: 'com.hazelcast', name: 'hazelcast', version: '5.1'

    // --------- Sink dependencies -----
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.8.1'
//    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.1'
    implementation 'org.mongodb:mongodb-driver-sync:4.2.2'

    // --------- Hamok --------
    implementation group: 'io.github.balazskreith.hamok', name: 'hamok-java-core', version: '1.0.18-SNAPSHOT'
//    implementation group: 'io.github.balazskreith.hamok', name: 'hamok-java-core', version: '0.9.2-beta'


    implementation 'org.java-websocket:Java-WebSocket:1.5.3'

    // --------- AWS SDK -----
    implementation platform('software.amazon.awssdk:bom:2.15.0')
    implementation 'software.amazon.awssdk:firehose'
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:sts'


    // ------------- Protobuf -----------
    implementation 'com.google.protobuf:protobuf-java:3.19.4'

    implementation  group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
//    testImplementation  group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
}


application {
    mainClass.set("org.observertc.observer.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("org.observertc.observer.*")
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "ObserveRTC_observer"
        property "sonar.organization", "observertc"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

task createVersion {
    File outputDir = file("$projectDir/src/main/resources")
    outputs.dir outputDir
    doFirst {
        outputDir.exists() || outputDir.mkdirs()
        new File(outputDir, "service.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}
//
compileJava.dependsOn createVersion